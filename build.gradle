buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'oss-sonatype-public'
            url = 'https://oss.sonatype.org/content/repositories/public/'
        }
        maven {
            name = 'forge-public'
            url = 'http://files.minecraftforge.net/maven/'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    }
}

defaultTasks 'licenseFormat', 'build'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'forge'
apply plugin: 'license'
apply plugin: 'signing'

group = project.group
archivesBaseName = project.name.toLowerCase()
version = minecraftVersion + '-' + forgeVersion.substring(forgeVersion.size() - 4)

ext {
    packaging = 'jar'
    mixinSrg = new File(tasks.reobf.temporaryDir.getCanonicalPath() + File.separator + 'mixins.srg')
    mixinRefMap = new File(project.buildDir, 'tmp/mixins/mixins.almura.refmap.json')
    currentYear = new Date().format("yyyy")
}
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'oss-sonatype-public'
        url = 'https://oss.sonatype.org/content/repositories/public/'
    }
    maven {
        name = 'sponge-public'
        url = 'http://repo.spongepowered.org/maven/'
    }
    maven {
        name = 'industrialcraft-public'
        url = 'http://maven.ic2.player.to'
    }
}

minecraft {
    version = project.ext.minecraftVersion + '-' + project.ext.forgeVersion + '-1.7.10'
    runDir = 'run'
    mappings = 'stable_12'
}

dependencies {
    compile 'com.flowpowered:flow-math:1.0.2-SNAPSHOT'
    compile 'net.malisis:malisiscore:1.7.10-0.12.10-SNAPSHOT:dev'
    compile 'ninja.leaping.configurate:configurate-yaml:1.2'
    compile('org.inspirenxe:simplesave:1.3.0-SNAPSHOT') {
        transitive = true
    }
    compile 'org.spongepowered:mixin:0.4.6-SNAPSHOT'
    compile 'org.yaml:snakeyaml:1.15'
    compile 'net.industrial-craft:industrialcraft-2:2.2.770-experimental:api'
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.url = project.url
    ext.year = "${project.inceptionYear} - ${project.currentYear}"
    header rootProject.file('HEADER.txt')
    ignoreFailures true
    strictCheck true
    include '**/*.java'
}

if (JavaVersion.current().isJava8Compatible() || JavaVersion.current().isJava9Compatible()) {
    tasks.withType(Javadoc) {
        // disable the crazy super-strict doclint tool in Java 8
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

compileJava {
    options.compilerArgs += [
            '-Xlint:-processing',
            "-AoutSrgFile=${project.mixinSrg}",
            "-AoutRefMapFile=${project.mixinRefMap}",
            "-AreobfSrgFile=${tasks.reobf.srg}"
    ]
    options.deprecation = true
    options.encoding = 'utf8'
}

reobf.dependsOn shadowJar

// Configure reobfuscation for mixins
reobf.doFirst {
    if (project.ext.mixinSrg.exists()) {
        addExtraSrgFile project.mixinSrg
    }
}

shadowJar {
    from project.mixinRefMap
    from 'LICENSE.txt'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude '.cache'
    exclude 'META-INF/maven/**'
    exclude 'GradleStart**'
    exclude 'net/minecraftforge/**'
    dependencies {
        include(dependency('com.alta189:simplesave'))
        include(dependency('com.flowpowered:flow-math'))
        include(dependency('com.h2database:h2'))
        include(dependency('mysql:mysql-connector-java'))
        include(dependency('ninja.leaping.configurate:configurate-yaml'))
        include(dependency('ninja.leaping.configurate:configurate-core'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('org.xerial:sqlite-jdbc'))
        include(dependency('org.yaml:snakeyaml'))
    }

    manifest {
        attributes(
                'Built-By': System.properties['user.name'],
                'Created-By': System.properties['java.vm.version'] + ' (' + System.properties['java.vm.vendor'] + ')',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vendor': url,
                'TargetMinecraftVersion': project.ext.minecraftVersion,
                'TargetForgeVersion': project.ext.forgeVersion,
                'TweakClass': 'com.almuradev.almura.launch.AlmuraLaunchTweaker',
                'TweakOrder': '0',
                'MixinConfigs': 'mixins.almura.forge.default.json',
                'ForceLoadAsMod': 'true',
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLAT': 'almura_at.cfg'
        )
    }
    classifier = ''
}
